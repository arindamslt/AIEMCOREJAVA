DATE:16.04.2024
========================================================================
FEATURES OF JAVA
======================================================
1.PLATFORM INDEPENDENT
2.OBJECT ORIENTED PROGRAMMING(OOPS)
3.MULTITHREADING
===========================
javac X.java

X.java====JAVA COMPILER====x.class
java X

x.class====JVM(JAVA VIRTUAL MACHINE)====O/P

JVM
==========================
JAVA VIRTUAL MACHINE
IT IS AN ABSTRACT MACHINE WHOSE PURPOSE TO EXECUTE COMPILED JAVA CLASS.

JDK JRE  JVM JIT
=================================================
JDK==JAVA DEVELOPMENT TOOLKIT
JRE==JAVA RUNTIME ENVIRONMENT
JVM==JAVA VIRTUAL MACHINE
JIT===JUST IN TIME COMPILER
=============================================================
JAVA VERSION===JAVA 17
EDITOR===NOTEPAD
IDE===INTEGRATED DEVELOPMENT ENVIRONMENT
EX:ECLIPSE,NETBEANS,STS,INTELLIJ
=================================================================
IDENTIFIER
==============================
NAME IN JAVA PROGRAM IS CALLED IDENTIFIER.IT CAN BE A CLASS NAME,IT CAN BE A METHOD NAME ,IT  CAN BE A VARIABLE NAME.

DATA TYPES
==================================
VARIABLE
==============================
NAMED STORED LOCATION
THREE KIND OF VARIBLE
===============================
1.INSTANCE VARIABLE
2.LOCAL VARIABLE
3.STATIC VARIBLE


OPERATOR
============================
1.ARITHMETIC
2.INCREMENT AND DECREMENT
================================
++  ,--
3.LOGICAL
-----------------------
& && ! !!
4.TERNARY
5.TYPE CASTING OPERATOR
6.ASSIGNMENT
7.INSTANCE OF
8.BIT WISE
9.RELATIONAL

CONTROL STRUCTURE
=================================
IF ELSE ELSE IF 
LOOP==FOR,WHILE,DO WHILE
BREAK CONTINUE

for(intialization;condition;increment/decrement)

OBJECT ORIENTED PROGRAMMING
=========================================================
FEATURES
======================================================
1.ENCAPSULATION
2.POLYMORPHISM
  STATIC
  DYNAMIC
3.INHERITANCE
   SINGLE
   MULTILEVEL
  HIERARCHICAL
4.ABSTRACTION
5.DYNAMIC BINDING

WHAT IS CLASS?
=========================================
CLASS IS COLLECTION OF OBJECTS WITH COMMON PROPERTIES AND BEHAVIOUR
IT IS DEAD TEMPLATE
WHAT IS OBJECT?
OBJECT IS REAL WORLD ENTITY


CHAIR TABLE BOOKSHELF    FURNITURE
=====================    ========
OBJECTS                  CLASS
LENGTH
WIDTH
HEIGHT
KEEPING SOMETHING

ENCAPSULATION
==================================================

CROCIN650
BINDING OF DATA AND METHOD TOGETHER
UML
================================
UNIFIED MODELLING LANGUAGE
PURPOSE
========================
DRAW THE CLASS DIAGRAM
SYMBOLS

THE SUPER CLASS IN JAVA IS Object Class  WHICH IS BELONGS TO java.lang.* Package
WHATEVER THE CLASS YOU HAVE CREATED ALL ARE THE CHILD OF OBJECT CLASS

POLYMORPHISM
=============================================================
POLY===MANY
MORPHISM=FORMS
THERE ARE TWO TYPES OF POLYMORPHISM
====================================
1.STATIC POLYMORPHISM
2.DYNAMIC POLYMORPHISM
STATIC POLYMORPHISM
================================
THIS IS ALSO CALLED METHOD OVERLOADDING
METHOD OVERLOADDING
===============================
SAME METHOD NAME WITH DIFFERENT ARGUMENT PASSING BODY MORE OR LESS SAME.
TASK1()
TASK2()
TASK3()
TASK(X.Y)
TASK(X,Y,Z)
TASK(X)

CONSTRUCTOR
=========================================
CONSTRUCTOR IS THE SAME NAME OF CLASS NAME.IT IS NOT EVEN VOID NOR RETURN TYPE BECAUSE IT RETURN CLASS ITSELF.
UTILITY
==============================================
1.CREATING OBJECT OF A CLASS
2.AT THE TIME OF CREATING THE OBJECT INITIALIZE THE OBJECT

==================================================================================
CONSTRUCTOR OVERLOADDING
===============================================================================
 DATE:17.04.2024
==================================================================
  INHERITANCE
==========================================================================
 AQUIRING THE PROPERTY OF CLASS INTO ANOTHER CLASS.

TYPES OF INHERITANCE
=============================
 1.SINGLE
 2.MULTILEVEL
 3.HIERARCHICAL

DYNAMIC POLYMORPHISM
================================
IT IS CALLED METHOD OVERRIDDING
SAME METHOD NAME BOTH IN CHILD AND PARENT BUT BODY IS DIFFERENT CALLED METHOD OVERRIDDING
ALWAYS OVERRIDDEN METHOD IS CALLED.
UTILITY OF SUPER
============================================
1.CALLING THE SUPER CLASS CONSTRUCTOR
2.CALLING THE SUPER CLASS METHOD WHICH IS HIDDEN IN SUBCLASS


ABSTRACTION
============================================
1.ABSTRACT CLASS
============================================
A CLASS IS CONSIDERED TO BE ABSTRACT IF THERE IS ATLEAST ONE METHOD IS ABSTRACT
Ex:
abstract class Test
{
   public abstract void show();
public void m1();
}

2.ABSTRACT METHOD
=======================
A METHOD IS CALLED ABSTRACT IF THERE IS A NO BODY
EX:public abstract void show();
RESTRICTION
==========================================
WE CAN'T CREATE THE OBJECT OF ABSTRACT CLASS


MODIFIER
=========================================
MODIFIER TELLS HOW A MEMBER OF A CLASS IS BEING ACCESSED INTO ANOTHER CLASS
LIST OF MODIFIER
==========================================
1.private====================
2.public
3.protected     ACCESS SPECIFIER
4.default================
5.static
6.final
7.abstract
8.native
9.synchronized

PRIVATE MEMBER ARE ACCESSABLE SAME CLASS ONLY
DEFAULT MEMBER ARE ACCESSABLE SAME CLASS AND IT'S CHILD CLASS BUT MUST IN SAME PACKAGE
PUBLIC AND PROTECTED MEMBERS ARE ACCESSABLE SAME CLASS AND IT'S CHILD EVEN IF THEY ARE IN DIFFERENT PACKAGE

STATIC
===========================
IT IS USED BY ITSELF.IF WE DECLARE A VARIBLE OR METHOD IS STATIC NO NEED TO CREATE OBJECT OF A CLASS TO ACCESS
IT.WE CAN ACCESS BY CLASS NAME.
RESTRICTION
===========================
STATIC MEMBERS ARE ACCESSABLE STATIC METHOD ONLY
STATIC BLOCK
================================================
IT EXECUTES ONLY ONCE AND IT EXECUTES FIRST.
RESTRICTION
========================================
IT WILL ACCESS ONLY STATIC MEMBER

FINAL
=======================================
IF WE DECLARE A VARIABLE IS FINAL IT IS CONSTANT
IF WE DECLARE A METHOD IS FINAL IT CAN'T BE OVERRIDDEN
IF WE DECLARE THE CLASS IS FINAL IT CAN'T BE EXTENDED
===================================================================
NESTED CLASS
===========================================================
CLASS WITHIN CALSS IS CALLED NESTED CLASS
CLASS x
{
  CLASS Y
  {

  }
}

DATE:18.04.2024
========================================================================================================
  INTERFACE
=====================================================================================================
INTERFACE IS A CONTRACT BETWEEN THE CLEINT CODE AND THE IMPLEMENTED CLASS
IN INTERFACE BY DEFAULT ALL METHODS ARE ABSTRACT
JAVA8 INTRODUCE DEFAULT METHOD IN INTERFACE

ABSTARCT CLASS                VS                INTERFACE
==================================================================================
1.ATLEAST ONE METHOD IS ABSTRACT         1.BY DEFAULT ALL METHODS ARE ABSTRACT
2.IT IS EXTENED                          2.IT IS IMPLEMEMNTED
3.IT CAN'T OVERCOME MULTIPLE             3.IT CAN ABLE TO OVERCOME MULTIPLE INHERITANCE

INHERITANCE 
============================================================================================
YOU CAN'T CREATE OBJECT OF INTERFACE AND ABSTRACT CLASS

EXCEPTION HANDELLING
==============================   
ERROR===ERROR IS NOT RECOVERABLE
EXCEPTION==IT IS RECOVERABLE
EXCEPTION IS EVENT WHICH OCCUR DURING TRHE EXECUTION OF A PROGRAM IT WILL PREVENT THE EXECUTION OF PROGRAM.
IF YOU HANDLE THE EXCEPTION THEN REST OF THE PART WILL BE EXECUTED
HANDLE THE EXCEPTION BY MEANS OF
========================================
TRY
CATCH
FINALLY
THROW
THROWS
TYPES OF EXCEPTION
===============================================
1.CHECKED EXCEPTION=====OTHER THAN RUNTIME EXCEPTION AND IT'S SUB CLASS CALLED CHECKED
2.UNCHECKED EXCEPTION===RUNTIME EXCEPTION AND IT'S SUBCLASS CALLED UNCHECKED EXCEPTIO 
IN CASE OF CHECKED EXCEPTION IT IS MANDATORY TO WRITE TRY AND CATCH BLOCK
==================================================================
EXCEPTION MESSAGE HANDELLING
====================================================================
EXCEPTIONOBJECT.printStackTrace();====PACKAGE NAME ALONG WITH CLASS NAME+MESSAGE+LINE NUMBER WHERE EXCEPTION OCCUR
System.out.println(exceptionobject);====PACKAGE NAME ALONG WITH CLASS NAME+MESSAGE

finally
==========================================================
WHETHER THE EXCEPTION OCCUR OR NOT FINALLY BLOCK WILL BE EXECUTED
PURPOSE
=============================
CLEANING UP TASK

IF WE DO NOT WANT TO USE TRY AND CATCH THEN WE GO FOR THROWS  CLAUSE
THROWS CLAUSE TO BE WRITTEN ALONG WITH THE METHOD NAME
FOR EX:
public void res() throws ArithmeticException,Exception
THROWS SHOULD BE REQUIRED BOTH CALLER AND CALLE ENVIRONMENT


USER DEFINED EXCEPTION
=============================================================

THROW CLAUSE IS USED TO THROW THE USERDEFINED EXCEPTION OBJECT.WHEN USERDEFINED
EXCEPTION OCCUR JVM CAN'T THROW THE EXCEPTION AUTOMATICALLY.AS A PROGRAMMER YOU
HAVE TO THROW THE EXCEPTION EXCIPLITLY BY THROW CLAUSE.

USER INPUT CAN GIVEN BY TWO WAYS
===================================
1.BufferReader Class====import java.io.*;
2.Scanner Class=========import java.util.*






















   

